{
  "contractName": "MockToken1",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50735aeda56215b167893e80b4fe645ba6d5bab767de6000908152602052633b9aca007f2028d885d8c9462a22814b24d93b79d504333c62f71a4978837b587d497e8f60819055600155610683806100696000396000f3006080604052600436106100745763ffffffff60e060020a600035041663095ea7b3811461007957806318160ddd146100b157806323b872dd146100d8578063661884631461010257806370a0823114610126578063a9059cbb14610147578063d73dd6231461016b578063dd62ed3e1461018f575b600080fd5b34801561008557600080fd5b5061009d600160a060020a03600435166024356101b6565b604080519115158252519081900360200190f35b3480156100bd57600080fd5b506100c661020a565b60408051918252519081900360200190f35b3480156100e457600080fd5b5061009d600160a060020a0360043581169060243516604435610210565b34801561010e57600080fd5b5061009d600160a060020a0360043516602435610375565b34801561013257600080fd5b506100c6600160a060020a0360043516610453565b34801561015357600080fd5b5061009d600160a060020a036004351660243561046e565b34801561017757600080fd5b5061009d600160a060020a036004351660243561053d565b34801561019b57600080fd5b506100c6600160a060020a03600435811690602435166105c4565b336000818152600260209081526040808320600160a060020a03871680855290835281842086905581518681529151939490939092600080516020610638833981519152928290030190a350600192915050565b60015490565b6000600160a060020a038316151561022757600080fd5b600160a060020a03841660009081526020819052604090205482111561024c57600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561027c57600080fd5b600160a060020a0384166000908152602081905260409020546102a5908363ffffffff6105ef16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546102da908363ffffffff61060116565b600160a060020a0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461031c908363ffffffff6105ef16565b600160a060020a0380861660008181526002602090815260408083203384528252918290209490945580518681529051928716939192600080516020610618833981519152929181900390910190a35060019392505050565b336000908152600260209081526040808320600160a060020a0386168452909152812054808311156103ca57336000908152600260209081526040808320600160a060020a03881684529091528120556103ff565b6103da818463ffffffff6105ef16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a038916808552908352928190205481519081529051929392600080516020610638833981519152929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b6000600160a060020a038316151561048557600080fd5b336000908152602081905260409020548211156104a157600080fd5b336000908152602081905260409020546104c1908363ffffffff6105ef16565b3360009081526020819052604080822092909255600160a060020a038516815220546104f3908363ffffffff61060116565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233926000805160206106188339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610571908363ffffffff61060116565b336000818152600260209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610638833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156105fb57fe5b50900390565b60008282018381101561061057fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a723058207f01e96463a084d9ba1ef48af6706a639d5aace127fd1b2b8fcfad7236805c8b0029",
  "deployedBytecode": "0x6080604052600436106100745763ffffffff60e060020a600035041663095ea7b3811461007957806318160ddd146100b157806323b872dd146100d8578063661884631461010257806370a0823114610126578063a9059cbb14610147578063d73dd6231461016b578063dd62ed3e1461018f575b600080fd5b34801561008557600080fd5b5061009d600160a060020a03600435166024356101b6565b604080519115158252519081900360200190f35b3480156100bd57600080fd5b506100c661020a565b60408051918252519081900360200190f35b3480156100e457600080fd5b5061009d600160a060020a0360043581169060243516604435610210565b34801561010e57600080fd5b5061009d600160a060020a0360043516602435610375565b34801561013257600080fd5b506100c6600160a060020a0360043516610453565b34801561015357600080fd5b5061009d600160a060020a036004351660243561046e565b34801561017757600080fd5b5061009d600160a060020a036004351660243561053d565b34801561019b57600080fd5b506100c6600160a060020a03600435811690602435166105c4565b336000818152600260209081526040808320600160a060020a03871680855290835281842086905581518681529151939490939092600080516020610638833981519152928290030190a350600192915050565b60015490565b6000600160a060020a038316151561022757600080fd5b600160a060020a03841660009081526020819052604090205482111561024c57600080fd5b600160a060020a038416600090815260026020908152604080832033845290915290205482111561027c57600080fd5b600160a060020a0384166000908152602081905260409020546102a5908363ffffffff6105ef16565b600160a060020a0380861660009081526020819052604080822093909355908516815220546102da908363ffffffff61060116565b600160a060020a0380851660009081526020818152604080832094909455918716815260028252828120338252909152205461031c908363ffffffff6105ef16565b600160a060020a0380861660008181526002602090815260408083203384528252918290209490945580518681529051928716939192600080516020610618833981519152929181900390910190a35060019392505050565b336000908152600260209081526040808320600160a060020a0386168452909152812054808311156103ca57336000908152600260209081526040808320600160a060020a03881684529091528120556103ff565b6103da818463ffffffff6105ef16565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a038916808552908352928190205481519081529051929392600080516020610638833981519152929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b6000600160a060020a038316151561048557600080fd5b336000908152602081905260409020548211156104a157600080fd5b336000908152602081905260409020546104c1908363ffffffff6105ef16565b3360009081526020819052604080822092909255600160a060020a038516815220546104f3908363ffffffff61060116565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233926000805160206106188339815191529281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610571908363ffffffff61060116565b336000818152600260209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610638833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156105fb57fe5b50900390565b60008282018381101561061057fe5b93925050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a723058207f01e96463a084d9ba1ef48af6706a639d5aace127fd1b2b8fcfad7236805c8b0029",
  "sourceMap": "93:154:27:-;;;138:107;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;187:42:27;241:8:34;:24;;;;;231:10:27;241:24:34;:41;;;288:12;:29;93:154:27;;;;;;",
  "deployedSourceMap": "93:154:27:-;;;;;;;;;-1:-1:-1;;;93:154:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:183:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1798:183:42;-1:-1:-1;;;;;1798:183:42;;;;;;;;;;;;;;;;;;;;;;;;;371:83:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:83:36;;;;;;;;;;;;;;;;;;;;736:439:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;736:439:42;-1:-1:-1;;;;;736:439:42;;;;;;;;;;;;3602:398;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3602:398:42;-1:-1:-1;;;;;3602:398:42;;;;;;;1189:107:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1189:107:36;-1:-1:-1;;;;;1189:107:36;;;;;608:379;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;608:379:36;-1:-1:-1;;;;;608:379:36;;;;;;;2883:257:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2883:257:42;-1:-1:-1;;;;;2883:257:42;;;;;;;2300:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2300:126:42;-1:-1:-1;;;;;2300:126:42;;;;;;;;;;1798:183;1885:10;1865:4;1877:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1877:29:42;;;;;;;;;;;:38;;;1921;;;;;;;1865:4;;1877:29;;1885:10;;-1:-1:-1;;;;;;;;;;;1921:38:42;;;;;;;-1:-1:-1;1972:4:42;1798:183;;;;:::o;371:83:36:-;437:12;;371:83;:::o;736:439:42:-;818:4;-1:-1:-1;;;;;838:17:42;;;;830:26;;;;;;-1:-1:-1;;;;;880:15:42;;:8;:15;;;;;;;;;;;870:25;;;862:34;;;;;;-1:-1:-1;;;;;920:14:42;;;;;;:7;:14;;;;;;;;935:10;920:26;;;;;;;;910:36;;;902:45;;;;;;-1:-1:-1;;;;;972:15:42;;:8;:15;;;;;;;;;;;:27;;992:6;972:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;954:15:42;;;:8;:15;;;;;;;;;;;:45;;;;1021:13;;;;;;;:25;;1039:6;1021:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1005:13:42;;;:8;:13;;;;;;;;;;;:41;;;;1081:14;;;;;:7;:14;;;;;1096:10;1081:26;;;;;;;:38;;1112:6;1081:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1052:14:42;;;;;;;:7;:14;;;;;;;;1067:10;1052:26;;;;;;;;:67;;;;1125:28;;;;;;;;;;;1052:14;;-1:-1:-1;;;;;;;;;;;1125:28:42;;;;;;;;;;-1:-1:-1;1166:4:42;736:439;;;;;:::o;3602:398::-;3721:10;3685:4;3713:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3713:29:42;;;;;;;;;;3752:27;;;3748:164;;;3797:10;3821:1;3789:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3789:29:42;;;;;;;;;:33;3748:164;;;3875:30;:8;3888:16;3875:30;:12;:30;:::i;:::-;3851:10;3843:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3843:29:42;;;;;;;;;:62;3748:164;3926:10;3948:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3917:61:42;;3948:29;;;;;;;;;;;3917:61;;;;;;;;;3926:10;-1:-1:-1;;;;;;;;;;;3917:61:42;;;;;;;;;;-1:-1:-1;3991:4:42;;3602:398;-1:-1:-1;;;3602:398:42:o;1189:107:36:-;-1:-1:-1;;;;;1275:16:36;1245:15;1275:16;;;;;;;;;;;;1189:107::o;608:379::-;671:4;-1:-1:-1;;;;;691:17:36;;;;683:26;;;;;;742:10;733:8;:20;;;;;;;;;;;723:30;;;715:39;;;;;;856:10;847:8;:20;;;;;;;;;;;:32;;872:6;847:32;:24;:32;:::i;:::-;833:10;824:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;901:13:36;;;;;;:25;;919:6;901:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;885:13:36;;:8;:13;;;;;;;;;;;;:41;;;;932:33;;;;;;;885:13;;941:10;;-1:-1:-1;;;;;;;;;;;932:33:36;;;;;;;;;-1:-1:-1;978:4:36;608:379;;;;:::o;2883:257:42:-;3013:10;2961:4;3005:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3005:29:42;;;;;;;;;;:46;;3039:11;3005:46;:33;:46;:::i;:::-;2981:10;2973:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2973:29:42;;;;;;;;;;;;:78;;;3057:61;;;;;;2973:29;;-1:-1:-1;;;;;;;;;;;3057:61:42;;;;;;;;;;-1:-1:-1;3131:4:42;2883:257;;;;:::o;2300:126::-;-1:-1:-1;;;;;2396:15:42;;;2374:7;2396:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2300:126::o;836:110:33:-;894:7;916:6;;;;909:14;;;;-1:-1:-1;936:5:33;;;836:110::o;1008:129::-;1066:7;1093:5;;;1111:6;;;;1104:14;;;;1131:1;1008:129;-1:-1:-1;;;1008:129:33:o",
  "source": "pragma solidity ^0.4.18;\n\nimport 'zeppelin-solidity/contracts/mocks/StandardTokenMock.sol';\n\ncontract MockToken1 is StandardTokenMock {\n  function MockToken1() public\n  StandardTokenMock(0x5aeda56215b167893e80b4fe645ba6d5bab767de, 1000000000) {}\n}\n\n\n",
  "sourcePath": "/Users/novosma/Documents/swprojects/github.com/eth_option/contracts/test/MockToken1.sol",
  "ast": {
    "absolutePath": "/Users/novosma/Documents/swprojects/github.com/eth_option/contracts/test/MockToken1.sol",
    "exportedSymbols": {
      "MockToken1": [
        3362
      ]
    },
    "id": 3363,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3350,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:27"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/mocks/StandardTokenMock.sol",
        "file": "zeppelin-solidity/contracts/mocks/StandardTokenMock.sol",
        "id": 3351,
        "nodeType": "ImportDirective",
        "scope": 3363,
        "sourceUnit": 3651,
        "src": "26:65:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3352,
              "name": "StandardTokenMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3650,
              "src": "116:17:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardTokenMock_$3650",
                "typeString": "contract StandardTokenMock"
              }
            },
            "id": 3353,
            "nodeType": "InheritanceSpecifier",
            "src": "116:17:27"
          }
        ],
        "contractDependencies": [
          3650,
          3802,
          3900,
          3932,
          4335
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3362,
        "linearizedBaseContracts": [
          3362,
          3650,
          4335,
          3802,
          3900,
          3932
        ],
        "name": "MockToken1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3360,
              "nodeType": "Block",
              "src": "243:2:27",
              "statements": []
            },
            "documentation": null,
            "id": 3361,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "307835616564613536323135623136373839336538306234666536343562613664356261623736376465",
                    "id": 3356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "187:42:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_519108852889882937975428032816568655093033297886_by_1",
                      "typeString": "int_const 5191...(40 digits omitted)...7886"
                    },
                    "value": "0x5aeda56215b167893e80b4fe645ba6d5bab767de"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "31303030303030303030",
                    "id": 3357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "231:10:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000_by_1",
                      "typeString": "int_const 1000000000"
                    },
                    "value": "1000000000"
                  }
                ],
                "id": 3358,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3355,
                  "name": "StandardTokenMock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3650,
                  "src": "169:17:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_StandardTokenMock_$3650_$",
                    "typeString": "type(contract StandardTokenMock)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "169:73:27"
              }
            ],
            "name": "MockToken1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "157:2:27"
            },
            "payable": false,
            "returnParameters": {
              "id": 3359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:0:27"
            },
            "scope": 3362,
            "src": "138:107:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3363,
        "src": "93:154:27"
      }
    ],
    "src": "0:250:27"
  },
  "legacyAST": {
    "absolutePath": "/Users/novosma/Documents/swprojects/github.com/eth_option/contracts/test/MockToken1.sol",
    "exportedSymbols": {
      "MockToken1": [
        3362
      ]
    },
    "id": 3363,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3350,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:27"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/mocks/StandardTokenMock.sol",
        "file": "zeppelin-solidity/contracts/mocks/StandardTokenMock.sol",
        "id": 3351,
        "nodeType": "ImportDirective",
        "scope": 3363,
        "sourceUnit": 3651,
        "src": "26:65:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3352,
              "name": "StandardTokenMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3650,
              "src": "116:17:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardTokenMock_$3650",
                "typeString": "contract StandardTokenMock"
              }
            },
            "id": 3353,
            "nodeType": "InheritanceSpecifier",
            "src": "116:17:27"
          }
        ],
        "contractDependencies": [
          3650,
          3802,
          3900,
          3932,
          4335
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3362,
        "linearizedBaseContracts": [
          3362,
          3650,
          4335,
          3802,
          3900,
          3932
        ],
        "name": "MockToken1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3360,
              "nodeType": "Block",
              "src": "243:2:27",
              "statements": []
            },
            "documentation": null,
            "id": 3361,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "307835616564613536323135623136373839336538306234666536343562613664356261623736376465",
                    "id": 3356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "187:42:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_519108852889882937975428032816568655093033297886_by_1",
                      "typeString": "int_const 5191...(40 digits omitted)...7886"
                    },
                    "value": "0x5aeda56215b167893e80b4fe645ba6d5bab767de"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "31303030303030303030",
                    "id": 3357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "231:10:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000_by_1",
                      "typeString": "int_const 1000000000"
                    },
                    "value": "1000000000"
                  }
                ],
                "id": 3358,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3355,
                  "name": "StandardTokenMock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3650,
                  "src": "169:17:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_StandardTokenMock_$3650_$",
                    "typeString": "type(contract StandardTokenMock)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "169:73:27"
              }
            ],
            "name": "MockToken1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "157:2:27"
            },
            "payable": false,
            "returnParameters": {
              "id": 3359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:0:27"
            },
            "scope": 3362,
            "src": "138:107:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3363,
        "src": "93:154:27"
      }
    ],
    "src": "0:250:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-09-14T07:52:25.014Z"
}